
* Tasks
** DONE Start a new org file
   CLOSED: [2015-07-11 Sat 22:52]
** TODO Provide some working examples
** TODO Have a beer
** TODO Commit this example

** Using python
#+begin_src python
import datetime
today = datetime.date.today()
return today
#+end_src

** Using ruby
#+begin_src ruby
,require 'date'
,"This file was last evaluated on #{Date.today}"
#+end_src

** Using clojure
#+begin_src clojure
(defn now [] (java.util.Date.))
(now)
#+end_src

** Using lisp
examples - http://orgmode.org/manual/var.html

#+begin_src lisp
(defun current-date-string ()
  "Returns current date as a string."
  (multiple-value-bind (sec min hr day mon yr dow dst-p tz)
                       (get-decoded-time)
    (declare (ignore sec min hr dow dst-p tz))
    (format nil "~4,'0d-~2,'0d-~2,'0d" yr mon day)))
(current-date-string)
#+end_src

#+name: hello-world
#+header: :var message="Hello World!"
#+begin_src lisp
  (princ message)
#+end_src

#+NAME: example-table
| 1 |
| 2 |
| 3 |
| 4 |

#+NAME: table-length
#+BEGIN_SRC emacs-lisp :var table=example-table
(length table)
#+END_SRC




** Searching ES
#+BEGIN_SRC es
POST /_search?pretty
{
  "query": {
    "match_all": {}
  }
}
#+END_SRC

** Searching ES without parameters
#+BEGIN_SRC es :method POST :url localhost:9200/_search?pretty
{
  "query": {
    "match_all": {}
  }
}
#+END_SRC
** Searching ES with local jq filter
#+BEGIN_SRC es :jq .name, .version.number
GET /
{}
#+END_SRC
** Searching ES with the CSV Plugin
#+BEGIN_SRC es
POST /_search_csv?pretty
{
  "query": {
    "match_all": {}
  }
}
#+END_SRC
