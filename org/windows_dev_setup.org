
* setting up a proper windows development environment

** DONE installing emacs
CLOSED: [2015-10-01 Thu 22:45]

*** preparation
**** set a HOME system environment variable
HOME=%USERPROFILE% 
*** emacs program
**** download emacs
https://ftp.gnu.org/gnu/emacs/windows/
**** unpack and copy folder to c:\
e.g. C:\emacs-24.5-bin-i686-mingw32
this will be known as $EMACS_PATH
**** install zlib
http://www.zlib.net/
copy zlib1.dll into $EMACS_PATH\bin\
*** emacs configuration
**** get emacs to start in %HOME% by default
create a shortcut to %EMACS_PATH\bin\runemacs on desktop
go to it's properties
set "start in:" to %HOME%
**** get my preconfigured emacs configuration for development
clone preconfigured emacs.d into %HOME%
cd %HOME%
git clone https://github.com/jclosure/.emacs.d.git
*** run emacs
emacs will start up and detect missing packages that it needs to support development
after it completes, you will have a fully functional emacs development environment

** DONE installing python
CLOSED: [2015-10-01 Thu 22:45]

*** download python
I prefer Winpython because it has a fully compiled version of scipy
http://winpython.github.io/
*** install python
I will be using WinPython-64bit-2.7.10.2
Run the executable you downloaded, it will ask where you want it installed.
Select C:\WinPython-64bit-2.7.10.2 (or whatever version you have)
*** add python directories to %PATH%
add the following directories to the PATH variable under system
C:\WinPython-64bit-2.7.10.2\python-2.7.10.amd64
C:\WinPython-64bit-2.7.10.2\python-2.7.10.amd64\Scripts
*** create a variable called PYTHONPATH 
My Computer > Properties > Advanced System Settings > Environment Variables >
Then under system variables I create a new Variable called PYTHONPATH. 
In this variable I have C:\WinPython-64bit-2.7.10.2\python-2.7.10.amd64\Lib;C:\WinPython-64bit-2.7.10.2\python-2.7.10.amd64\DLLs;C:\WinPython-64bit-2.7.10.2\python-2.7.10.amd64\Lib\lib-tk
*** run python
from a cmd.exe prompt type: python
good, it's working
close it
*** prep your python environment for emacs development
pip install virtualenv
pip install epc
pip install pyflakes
pip install pyreadline
*** adapt your emacs configuration to pickup the python directory
edit %HOME%\emacs.d\init.el
**** set the variable python variables to pickup the correct directories for ipython-based repl development
(setq
  python-shell-interpreter "C:\\WinPython-64bit-2.7.10.2\\python-2.7.10.amd64\\python.exe"
  python-shell-interpreter-args "-i C:\\WinPython-64bit-2.7.10.2\\python-2.7.10.amd64\\Scripts\\ipython.exe console")
*** run emacs
create a file called test.py
**** do M-x
jedi:setup
**** type:
addition = 2 + 2
print 'hello ' + str(addition)
**** save the file
**** do C-c, C-c
ipython repl buffer opens in a window and your code is evaluated
type:
addition
it evaluates to 4
*** you are cooking with python!

** DONE installing ruby
CLOSED: [2015-10-01 Thu 22:45]

*** download ruby
I use the Ruby Installer for Windows
http://rubyinstaller.org/downloads/
use 2.2.3 or later
Get the installer exe (I will be using Ruby 2.2.3 (x64).exe)
Get the corresponding DevKit (I will be using DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe)
*** install ruby
select:
Install Tcl/Tk support
Add Ruby executables to your PATH
Associate .rb and .rbw files with this Ruby installation
*** run ruby
at cmd.exe prompt type:
ruby -v
goodness
*** install DevKit
You need MinGW environment available to compile native c dependencies for Ruby
We will install it now
double-click the exe
extract it to: C:\DevKit-mingw64
open cmd.exe
cd C:\DevKit-mingw64
run:
ruby dk.rb init
run:
ruby dk.rb install
this last command will offer to bind the devkit to your ruby install.  if you have multiple versions, it will allow you to select the one you want
*** install baseline gems
gem install bundler
gem install rb-readline
gem install pry
gem install pry-byebug
*** add .pryrc (do this only if your pry sessions hang in emacs)
This is necessary because rb-readline apparently doesn't work well from inside Emacs.
I have included a monkey-patched version that fixes this issue.
just copy %HOME\.emacs.d\extra\.pryrc to %HOME%\
*** use the repl
**** create a file called test.rb
type:
addition = 2 + 2
puts "hello #{addition}"
save it: C-x C-s
**** use the repl
do M-x: inf-ruby
load the file into pry: C-x C-l
it will print "hello 4"
in the repl type:
addition
it will evalue to 4
*** congratulations, you're cooking with Ruby!

** DONE install elasticsearch
CLOSED: [2015-10-01 Thu 22:46]
*** install the latest jdk from:
**** if you don't already have it, get it from here:
http://www.oracle.com/technetwork/java/javase/downloads/index.html
**** run the installer and let the defaults stand
**** make sure you have a %JAVA_HOME% environment variable set to the location where you installed the JDK
In my case I installed Java8, and it went here by default: C:\Program Files\Java\jdk1.8.0_60
So I set JAVA_HOME=C:\Program Files\Java\jdk1.8.0_60
*** download the latest zip version from:
https://www.elastic.co/downloads/elasticsearch
I'm using elasticsearch-1.7.2
*** unpack it to:
C:\elasticsearch-1.7.2
*** set it up as a service
follow this simple guide:
https://www.elastic.co/guide/en/elasticsearch/reference/1.3/setup-service-win.html
**** summary:
cd C:\elasticsearch-1.7.2\bin
service install
service manage (the services.msc applet for ES will come up)
**** setup
set as "Automatic" startup
go ahead and start it for the first time by clicking start
*** create a personal bin folder
create a directory called bin at %HOME%\bin
put %HOME%\bin at the beginning of %PATH%
*** download jq and put it in %HOME%\bin
get jq.exe from:
https://stedolan.github.io/jq/download/
copy it into %HOME%\bin
*** use ES from Emacs org mode
in emacs open ~/emacs.d/org/test.org
go down to the "Working With Elasticsearch" sections
you can place your cursor inside each BEGIN_SRC block and run them with:
C-c C-c, it will prompt you in minibuffer to "evaluate this es code block on your system?:", select y
the resulting response from ES will be be displayed directly below the code block in a RESULTS section
you may re-evaluate code blocks over and over and they will overwrite the adjacent RESULTS section each time
*** congratulations, you are cooking with ES development inside emacs

** TODO installing clojure

** TODO installing common lisp
get sbcl
install slime
